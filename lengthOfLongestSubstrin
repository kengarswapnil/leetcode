class Solution {
    public int lengthOfLongestSubstring(String s) {
         Set<Character> set = new HashSet<>();
        int left = 0;  // Left pointer of the sliding window
        int maxLength = 0;  // Variable to store the maximum length

        // Iterate through the string with the right pointer
        for (int right = 0; right < s.length(); right++) {
            // If the character at the right pointer is already in the set, remove characters from the left
            while (set.contains(s.charAt(right))) {
                set.remove(s.charAt(left));
                left++;
            }
            
            // Add the current character to the set
            set.add(s.charAt(right));
            // Update the maximum length if the current window is longer
            maxLength = Math.max(maxLength, right - left + 1);
        }

        return maxLength;
    }
}
